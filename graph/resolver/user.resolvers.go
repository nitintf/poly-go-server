package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"poly-go-server/graph/generated"
	"poly-go-server/graph/models"
)

// Register is the resolver for the register field.
func (r *mutationResolver) Register(ctx context.Context, input models.RegisterUserInput) (*models.TokenResponse, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
	// return r.Impl.CreateUser(ctx, input)
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input models.LoginInput) (*models.TokenResponse, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*models.User, error) {
	return r.Impl.Me(ctx)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
